buildscript {
    ext {
	    tomcatVersion = '7.0.57'
        springVersion = '4.2.6.RELEASE'
        springSecurityVersion = '4.0.4.RELEASE'
        springDataVersion = '1.7.1.RELEASE'
        hibernateVersion = '5.1.0.Final'
        slf4jVersion = '1.7.7'
        junitVersion = '4.11'
        servletApiVersion = '3.0.1'
        postgreSQLVersion = '9.4.1208'
        aspectjVersion = '1.8.6'
        grettyVersion = '1.4.0'
        mysqlConnectorVersion = '5.1.38'
		postgresqlConnectorVersion = '9.0-801.jdbc4'
        commonsLangVersion = '3.4'
        outputWarVersion = '0.0.1'
        geoipVersion = '1.2.14'
        commonsValidatorVersion = '1.4.1'
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath files('liquibase-lib/liquibase-3.4.2.jar')
        classpath files('liquibase-lib/liquibase-groovy-dsl-1.2.1.jar')
        classpath files('liquibase-lib/liquibase-gradle-plugin-1.2.1.jar')
        classpath group: 'postgresql', name: 'postgresql', version: '9.0-801.jdbc4'
        classpath group: 'org.akhikhl.gretty', name: 'gretty', version: grettyVersion
    }
}

repositories {
    mavenCentral()
}

apply plugin: 'java'
apply plugin: 'org.liquibase.gradle'
apply plugin: 'war'
apply plugin: 'org.akhikhl.gretty'

sourceCompatibility = 1.8
targetCompatibility = 1.8

allprojects {
    tasks.withType(JavaCompile) {
        options.compilerArgs << '-Xlint:all'
    }
}

dependencies {
	compile group: 'org.springframework', name: 'spring-core', version: springVersion
	compile group: 'org.springframework', name: 'spring-context', version: springVersion
	compile group: 'org.springframework', name: 'spring-webmvc', version: springVersion
	compile group: 'org.springframework', name: 'spring-tx', version: springVersion
	compile group: 'org.springframework', name: 'spring-orm', version: springVersion
	compile group: 'org.springframework', name: 'spring-context-support', version: springVersion
	compile group: 'org.springframework', name: 'spring-aop', version: springVersion
	compile group: 'org.springframework', name: 'spring-test', version: springVersion
	compile group: 'org.springframework.security', name: 'spring-security-taglibs', version: springSecurityVersion
	compile group: 'org.springframework.security', name: 'spring-security-core', version: springSecurityVersion
	compile group: 'org.springframework.security', name: 'spring-security-config', version: springSecurityVersion
	compile group: 'org.springframework.security', name: 'spring-security-web', version: springSecurityVersion
	compile group: 'org.springframework.data', name: 'spring-data-jpa', version: springDataVersion
	compile group: 'org.hibernate', name: 'hibernate-core', version: hibernateVersion
	compile group: 'org.hibernate', name: 'hibernate-entitymanager', version: hibernateVersion
	compile group: 'org.hibernate', name: 'hibernate-validator', version: hibernateVersion
	compile group: 'org.aspectj', name: 'aspectjrt', version: aspectjVersion
	compile group: 'javax.servlet', name: 'javax.servlet-api', version: servletApiVersion
	compile group: 'junit', name: 'junit', version: junitVersion
	compile group: 'org.slf4j', name: 'slf4j-api', version: slf4jVersion
	compile group: 'org.slf4j', name: 'slf4j-nop', version: slf4jVersion
	compile group: 'org.slf4j', name: 'slf4j-log4j12', version: slf4jVersion	
	compile("log4j:log4j:1.2.15") {
		exclude group: "com.sun.jdmk", module: "jmxtools"
		exclude group: "com.sun.jmx", module: "jmxri"
		exclude group: "javax.mail", module: "mail"
		exclude group: "javax.jms", module: "jms"
	}
    compile group: 'org.apache.commons', name: 'commons-lang3', version: commonsLangVersion
    runtime group: 'postgresql', name: 'postgresql', version: '9.0-801.jdbc4'
    compile group: 'com.maxmind.geoip', name: 'geoip-api', version: geoipVersion
    compile group: 'commons-validator', name: 'commons-validator', version: commonsValidatorVersion
}

processResources {
    filesMatching('**/*.properties') {
        expand(project.properties)
    }
}

war {
    baseName = 'reducerlink'
    version = outputWarVersion
}

liquibase {
    // use "clearChecksums" task in case of "Unexpected error running Liquibase: Validation Failed"

    activities {
        main {
            changeLogFile 'db/main/master.groovy'
            url project.dbUrl
            username project.dbUsername
            password project.dbPassword
        }

        dev {
            changeLogFile 'db/dev/master.groovy'
            url project.dbUrl
            username project.dbUsername
            password project.dbPassword
        }
    }

    runList = 'main'
}

task updateDev << {
    liquibase.runList = 'main, dev'
    tasks.update.execute()
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.12'
}

/*
gretty {
    // http://akhikhl.github.io/gretty-doc/Gretty-configuration.html
    jvmArgs = ['-Djava.net.preferIPv4Stack=true']
}

tasks.withType(JavaExec) {
    systemProperty 'java.net.preferIPv4Stack', 'true'
}
*/